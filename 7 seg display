module seven_segment_display(
    output wire [6:0] SSEG_CA,
    output wire [3:0] SSEG_AN,
    input wire CLK,
    input wire [3:0] address,
    input wire [7:0] data,
    input wire write_to_RAM,
    input wire run,
    input wire [7:0] out_reg_output,
    input wire [7:0] RAM_output,
    input wire show_RAM_output
);

reg [19:0] count;
reg [1:0] selector;
reg [3:0] seven_seg_in;

always @(posedge CLK) begin
    count <= count + 1;
end

assign selector = count[19:18];

always @(*) begin
    if (run == 0) begin
        if (show_RAM_output == 1 || write_to_RAM == 1) begin
            case (seven_seg_in)
                4'b0000: SSEG_CA <= 7'b1000000; // "0"
                4'b0001: SSEG_CA <= 7'b1111001; // "1"
                4'b0010: SSEG_CA <= 7'b0100100; // "2"
                4'b0011: SSEG_CA <= 7'b0110000; // "3"
                4'b0100: SSEG_CA <= 7'b0011001; // "4"
                4'b0101: SSEG_CA <= 7'b0010010; // "5"
                4'b0110: SSEG_CA <= 7'b0000010; // "6"
                4'b0111: SSEG_CA <= 7'b1111000; // "7"
                4'b1000: SSEG_CA <= 7'b0000000; // "8"
                4'b1001: SSEG_CA <= 7'b0010000; // "9"
                4'b1010: SSEG_CA <= 7'b0100000; // a
                4'b1011: SSEG_CA <= 7'b0000011; // b
                4'b1100: SSEG_CA <= 7'b1000110; // C
                4'b1101: SSEG_CA <= 7'b0100001; // d
                4'b1110: SSEG_CA <= 7'b0000110; // E
                4'b1111: SSEG_CA <= 7'b0001110; // F
                default: SSEG_CA <= 7'b1111111; // Invalid input
            endcase

            case (selector)
                2'b00: begin
                    SSEG_AN <= 4'b0111;
                    seven_seg_in <= address;
                end
                2'b01: begin
                    SSEG_CA <= 7'b1111111;
                    SSEG_AN <= 4'b1011;
                end
                2'b10: begin
                    SSEG_AN <= 4'b1101;
                    seven_seg_in <= RAM_output[7:4];
                end
                2'b11: begin
                    SSEG_AN <= 4'b1110;
                    seven_seg_in <= RAM_output[3:0];
                end
                default: begin
                    SSEG_CA <= 7'b1111111;
                    SSEG_AN <= 4'b1111;
                end
            endcase
        end else begin // When show_RAM_output = '0' and write_to_RAM = '0'
            case (selector)
                2'b00: begin
                    SSEG_CA <= 7'b0010010; // 'S'
                    SSEG_AN <= 4'b0111;
                end
                2'b01: begin
                    SSEG_CA <= 7'b0001000; // 'A'
                    SSEG_AN <= 4'b1011;
                end
                2'b10: begin
                    SSEG_CA <= 7'b0001100; // 'P'
                    SSEG_AN <= 4'b1101;
                end
                2'b11: begin
                    SSEG_CA <= 7'b1111001; // '1'
                    SSEG_AN <= 4'b1110;
                end
                default: begin
                    SSEG_CA <= 7'b1111111;
                    SSEG_AN <= 4'b1111;
                end
            endcase
        end
    end else begin // When run = '1'
        case (seven_seg_in)
            4'b0000: SSEG_CA <= 7'b1000000; // "0"
            4'b0001: SSEG_CA <= 7'b1111001; // "1"
            4'b0010: SSEG_CA <= 7'b0100100; // "2"
            4'b0011: SSEG_CA <= 7'b0110000; // "3"
            4'b0100: SSEG_CA <= 7'b0011001; // "4"
            4'b0101: SSEG_CA <= 7'b0010010; // "5"
            4'b0110: SSEG_CA <= 7'b0000010; // "6"
            4'b0111: SSEG_CA <= 7'b1111000; // "7"
            4'b1000: SSEG_CA <= 7'b0000000; // "8"
            4'b1001: SSEG_CA <= 7'b0010000; // "9"
            4'b1010: SSEG_CA <= 7'b0100000; // a
            4'b1011: SSEG_CA <= 7'b0000011; // b
            4'b1100: SSEG_CA <= 7'b1000110; // C
            4'b1101: SSEG_CA <= 7'b0100001; // d
            4'b1110: SSEG_CA <= 7'b0000110; // E
            4'b1111: SSEG_CA <= 7'b0001110; // F
            default: SSEG_CA <= 7'b1111111; // Invalid input
        endcase

        case (selector)
            2'b00: begin
                SSEG_AN <= 4'b0111;
                SSEG_CA <= 7'b1111111;
            end
            2'b01: begin
                SSEG_CA <= 7'b1111111;
                SSEG_AN <= 4'b1011;
            end
            2'b10: begin
                SSEG_AN <= 4'b1101;
                seven_seg_in <= out_reg_output[7:4];
            end
            2'b11: begin
                SSEG_AN <= 4'b1110;
                seven_seg_in <= out_reg_output[3:0];
            end
            default: begin
                SSEG_CA <= 7'b1111111;
                SSEG_AN <= 4'b1111;
            end
        endcase
